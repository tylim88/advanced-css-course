* {
    margin: 0;
    padding: 0;
}

$color-primary: #f9ed69; //yellow
$color-secondary: #f08a5d; //orange
$color-tertiary: #b83b5e; //pink
$color-text-dark: #333; //dark grey
$color-text-light: #eee;

$width-button: 150px;

@mixin clearfix {
    &::after {
        content: '';
        clear: both;
        display: table;
    }
}

@mixin style-link-text($col) {
    text-decoration: none;
    text-transform: uppercase;
    color: $col;
}

@function divide($a, $b) {
    @return $a / $b;
}

nav {
    margin: divide(60, 2) * 1px; //30px
    background-color: $color-primary;

    @include clearfix;
}

.navigation {
    list-style: none;
    float: left;

    li {
        display: inline-block;
        margin-left: 30px;

        &:first-child {
            margin: 0;
        }

        a:link {
            @include style-link-text($color-text-dark);
        }
    }
}

.buttons {
    float: right;
}

%btn-placeholder {
    padding: 10px;
    display: inline-block;
    text-align: center;
    border-radius: 100px;
    width: $width-button;
    @include style-link-text($color-text-light);
} // this may look like mixin, but when compile it doesnt repeat itself but mixin will, good for related selectors only because mixin will not duplicate the selector but extend will. most of the time use mixin to prevent confusion.

.btn-main {
    &:link {
        @extend %btn-placeholder;
        background-color: $color-secondary;
    }

    &:hover {
        background-color: darken($color-secondary, 15%); // native function
    }
}

.btn-hot {
    &:link {
        @extend %btn-placeholder;
        background-color: $color-tertiary;
    }

    &:hover {
        background-color: lighten($color-tertiary, 10%);
    }
}
